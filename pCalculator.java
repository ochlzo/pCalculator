/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author APC
 */
public class pCalculator extends javax.swing.JFrame {

    int op1 = 0, op2 = 0, result = 0;
    int button = 0;
    int radioButton = 2;
    
    public pCalculator() {
        initComponents();
        
        jRadioButtonDecimal.setSelected(true);
        
        if (jRadioButtonDecimal.isSelected()) {
            jButtonA.setEnabled(false);
            jButtonB.setEnabled(false);
            jButtonC.setEnabled(false);
            jButtonD.setEnabled(false);
            jButtonE.setEnabled(false);
            jButtonF.setEnabled(false);
        }
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jRadioButtonBinary = new javax.swing.JRadioButton();
        jRadioButtonDecimal = new javax.swing.JRadioButton();
        jRadioButtonOctal = new javax.swing.JRadioButton();
        jRadioButtonHex = new javax.swing.JRadioButton();
        jButtonA = new javax.swing.JButton();
        jButtonC = new javax.swing.JButton();
        jButtonB = new javax.swing.JButton();
        jButtonD = new javax.swing.JButton();
        jButtonE = new javax.swing.JButton();
        jButtonF = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButtonEquals = new javax.swing.JButton();
        jButton0 = new javax.swing.JButton();
        jButtonDivision = new javax.swing.JButton();
        jButtonSubtraction = new javax.swing.JButton();
        jButtonMultiplication = new javax.swing.JButton();
        jButtonAddition = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();
        jButtonBackSpace = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLabelScreen = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jLabelScreenAnswer = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("PROGRAMMING CALCULATOR");

        buttonGroup1.add(jRadioButtonBinary);
        jRadioButtonBinary.setText("Binary");
        jRadioButtonBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonBinaryActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonDecimal);
        jRadioButtonDecimal.setText("Decimal");
        jRadioButtonDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDecimalActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonOctal);
        jRadioButtonOctal.setText("Octal");
        jRadioButtonOctal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOctalActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonHex);
        jRadioButtonHex.setText("Hex");
        jRadioButtonHex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonHexActionPerformed(evt);
            }
        });

        jButtonA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonA.setText("A");
        jButtonA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAActionPerformed(evt);
            }
        });

        jButtonC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonC.setText("C");
        jButtonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCActionPerformed(evt);
            }
        });

        jButtonB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonB.setText("B");
        jButtonB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBActionPerformed(evt);
            }
        });

        jButtonD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonD.setText("D");
        jButtonD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDActionPerformed(evt);
            }
        });

        jButtonE.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonE.setText("E");
        jButtonE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEActionPerformed(evt);
            }
        });

        jButtonF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonF.setText("F");
        jButtonF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton8.setText("8");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton7.setText("7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton9.setText("9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton4.setText("4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton5.setText("5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton6.setText("6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton3.setText("3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButtonEquals.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonEquals.setText("=");
        jButtonEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEqualsActionPerformed(evt);
            }
        });

        jButton0.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton0.setText("0");
        jButton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton0ActionPerformed(evt);
            }
        });

        jButtonDivision.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonDivision.setText("/");
        jButtonDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDivisionActionPerformed(evt);
            }
        });

        jButtonSubtraction.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonSubtraction.setText("-");
        jButtonSubtraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubtractionActionPerformed(evt);
            }
        });

        jButtonMultiplication.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonMultiplication.setText("*");
        jButtonMultiplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiplicationActionPerformed(evt);
            }
        });

        jButtonAddition.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonAddition.setText("+");
        jButtonAddition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdditionActionPerformed(evt);
            }
        });

        jButtonBack.setText("Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jButtonBackSpace.setText("⌫");
        jButtonBackSpace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackSpaceActionPerformed(evt);
            }
        });

        jButtonClear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonClear.setText("Clear");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jLabelScreen.setEditable(false);
        jLabelScreen.setColumns(20);
        jLabelScreen.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelScreen.setLineWrap(true);
        jLabelScreen.setRows(5);
        jLabelScreen.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane3.setViewportView(jLabelScreen);

        jLabelScreenAnswer.setEditable(false);
        jLabelScreenAnswer.setColumns(20);
        jLabelScreenAnswer.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelScreenAnswer.setLineWrap(true);
        jLabelScreenAnswer.setRows(5);
        jLabelScreenAnswer.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane4.setViewportView(jLabelScreenAnswer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonBack)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButtonC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonA, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonE, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton0, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonF, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jButtonEquals, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(62, 62, 62)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonSubtraction, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonAddition, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButtonBackSpace, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonMultiplication, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonBinary)
                                    .addComponent(jRadioButtonDecimal)
                                    .addComponent(jRadioButtonHex)
                                    .addComponent(jRadioButtonOctal))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(152, 152, 152))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButtonBinary)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonDecimal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonOctal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonHex))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonMultiplication, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBackSpace, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSubtraction, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonAddition, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonA, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonB, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonEquals, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonF, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonC, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jButtonD, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButtonE, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton0, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addGap(142, 142, 142))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void decToBinary(int n) {        
        jLabelScreenAnswer.setText(String.valueOf(Integer.toBinaryString(n)));
    }
    
    private void decToOctal(int n) {
        StringBuilder text = new StringBuilder();
        int[] binaryNum = new int[1000];
        int i = 0;
        
        while (n > 0) {
            binaryNum[i] = n % 8;
            n = n / 8;
            i++;
        }
        
        for (int j = i - 1; j >= 0; j--) {
            text.append(binaryNum[j]);
        }
        
        jLabelScreenAnswer.setText(String.valueOf(text));
    }
    
    private void decToHex(int n) {
        jLabelScreenAnswer.setText(String.valueOf(Integer.toHexString(n)).toUpperCase());
    }
    
    private int binaryToDecimal(String n) {
        String num = n;
        int dec_value = 0;
        int base = 1;
 
        int len = num.length();
        for (int i = len - 1; i >= 0; i--) {
            if (num.charAt(i) == '1')
                dec_value += base;
            base = base * 2;
        }
 
        return dec_value; 
    }
    
    private void binaryToOctal (String n) {
        int decimal = 0;
        int power = 0;  

        for (int i = n.length() - 1; i >= 0; i--) {
            char bit = n.charAt(i);
            if (bit == '1') {
                decimal += Math.pow(2, power); 
            }
            power++;
        }
        
        String octalString = Integer.toOctalString(decimal);
        jLabelScreenAnswer.setText(octalString);
    }
    
    private void binaryToHex (String n) {
        int decimal = 0;
        int power = 0;  

        for (int i = n.length() - 1; i >= 0; i--) {
            char bit = n.charAt(i);
            if (bit == '1') {
                decimal += Math.pow(2, power); 
            }
            power++;
        }
        
        String hexString = Integer.toHexString(decimal);
        jLabelScreenAnswer.setText(hexString.toUpperCase());
    }
    
    private void octalToBinary(String n) {
        int i = 0;
        String binary = "";
        
        while (i < n.length()) {
            char digit = n.charAt((int)i);
            
            switch (digit) {
            case '0':
                binary += "000";
                break;
            case '1':
                binary += "001";
                break;
            case '2':
                binary += "010";
                break;
            case '3':
                binary += "011";
                break;
            case '4':
                binary += "100";
                break;
            case '5':
                binary += "101";
                break;
            case '6':
                binary += "110";
                break;
            case '7':
                binary += "111";
                break;
            default:
                break;
            }
            i++;  
        }
        jLabelScreenAnswer.setText(binary);
    }
    
    private int octalToDecimal(String n) {
        return Integer.parseInt(n, 8);  
    }
    
    private void octalToHex(String n) {
        int i = 0;
        String binary = "";
        
        while (i < n.length()) {
            char digit = n.charAt((int)i);
            
            switch (digit) {
            case '0':
                binary += "000";
                break;
            case '1':
                binary += "001";
                break;
            case '2':
                binary += "010";
                break;
            case '3':
                binary += "011";
                break;
            case '4':
                binary += "100";
                break;
            case '5':
                binary += "101";
                break;
            case '6':
                binary += "110";
                break;
            case '7':
                binary += "111";
                break;
            default:
                break;
            }
            i++;  
        }
        
        int decimal = 0;
        int power = 0;  

        for (int j = binary.length() - 1; j >= 0; j--) {
            char bit = binary.charAt(j);
            if (bit == '1') {
                decimal += Math.pow(2, power); 
            }
            power++;
        }
        
        String hexString = Integer.toHexString(decimal);
        jLabelScreenAnswer.setText(hexString.toUpperCase());
    }
    
    private void hexToBinary(String n) {
        StringBuilder binary = new StringBuilder();

        for (int i = 0; i < n.length(); i++) {
            char digit = n.charAt(i);
            String binaryValue;

            switch (digit) {
                case '0': binaryValue = "0000"; break;
                case '1': binaryValue = "0001"; break;
                case '2': binaryValue = "0010"; break;
                case '3': binaryValue = "0011"; break;
                case '4': binaryValue = "0100"; break;
                case '5': binaryValue = "0101"; break;
                case '6': binaryValue = "0110"; break;
                case '7': binaryValue = "0111"; break;
                case '8': binaryValue = "1000"; break;
                case '9': binaryValue = "1001"; break;
                case 'A': binaryValue = "1010"; break;
                case 'B': binaryValue = "1011"; break;
                case 'C': binaryValue = "1100"; break;
                case 'D': binaryValue = "1101"; break;
                case 'E': binaryValue = "1110"; break;
                case 'F': binaryValue = "1111"; break;
                default: binaryValue = ""; 
            }

            binary.append(binaryValue);
        }
        jLabelScreenAnswer.setText(String.valueOf(binary));
    }
    
    private int hexToDecimal(String n) {
        return Integer.parseInt(n, 16);
    }
    
    private void hexToOctal(String n) {
        int val = 0;
        String digits = "0123456789ABCDEF";
        
        for (int i = 0; i < n.length(); i++) {
            char c = n.charAt(i);
            int d = digits.indexOf(c);
            val = 16 * val + d;
        }
        
        String octalString = Integer.toOctalString(val);
        jLabelScreenAnswer.setText(octalString);
    }
    
    private void disableRadioButton() {
        if (jRadioButtonDecimal.isSelected()) {
            jRadioButtonBinary.setEnabled(false);
            jRadioButtonHex.setEnabled(false);
            jRadioButtonOctal.setEnabled(false);
        } else if (jRadioButtonBinary.isSelected()) {
            jRadioButtonDecimal.setEnabled(false);
            jRadioButtonHex.setEnabled(false);
            jRadioButtonOctal.setEnabled(false);
        } else if (jRadioButtonOctal.isSelected()) {
            jRadioButtonDecimal.setEnabled(false);
            jRadioButtonHex.setEnabled(false);
            jRadioButtonBinary.setEnabled(false);
        } else {
            jRadioButtonDecimal.setEnabled(false);
            jRadioButtonBinary.setEnabled(false);
            jRadioButtonOctal.setEnabled(false);
        }
    }
    
    private void getValue() {
        if (!jLabelScreen.getText().isEmpty()) {
            String input = jLabelScreen.getText();

            if (jRadioButtonDecimal.isSelected()) {
                if (button == 0) {
                    op1 = Integer.parseInt(input);
                } else {
                    op2 = Integer.parseInt(input);
                    jButtonEqualsActionPerformed(null);
                }
            } else if (jRadioButtonBinary.isSelected()) {
                if (button == 0) {
                    op1 = binaryToDecimal(input);
                } else {
                    op2 = binaryToDecimal(input);
                    jButtonEqualsActionPerformed(null);
                }
            } else if (jRadioButtonOctal.isSelected()) {
                if (button == 0) {
                    op1 = octalToDecimal(input);
                } else {
                    op2 = octalToDecimal(input);
                    jButtonEqualsActionPerformed(null);
                }
            } else if (jRadioButtonHex.isSelected()) {
                if (button == 0) {
                    op1 = hexToDecimal(input);
                } else {
                    op2 = hexToDecimal(input);
                    jButtonEqualsActionPerformed(null);
                }
            }

            jLabelScreen.setText("");
        }
    }

    private void performOperation() {
        switch (button) {
            case 1: // Addition
                result = op1 + op2;
                break;
            case 2: // Subtraction
                result = op1 - op2;
                break;
            case 3: // Multiplication
                result = op1 * op2;
                break;
            case 4: // Division
                if (op2 != 0) {
                    result = op1 / op2;
                } else {
                    jLabelScreen.setText("Error: Division by zero");
                    return;
                }
                break;
            default:
                jLabelScreen.setText("Error: No operation selected");
                return;
        }
    }
    
    private void jButtonEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEqualsActionPerformed
        if (evt == null) { // Programmatically triggered
           if (jRadioButtonBinary.isSelected()) {
               op2 = binaryToDecimal(jLabelScreen.getText());
           } else if (jRadioButtonOctal.isSelected()) {
               op2 = octalToDecimal(jLabelScreen.getText());
           } else if (jRadioButtonHex.isSelected()){
               op2 = hexToDecimal(jLabelScreen.getText());
           } else {
               op2 = Integer.parseInt(jLabelScreen.getText());
           }
           performOperation();
           op1 = result; 
           button = 0;
        } else { // User clicked the button
           if (jRadioButtonBinary.isSelected()) {
               op2 = binaryToDecimal(jLabelScreen.getText());
           } else if (jRadioButtonOctal.isSelected()) {
               op2 = octalToDecimal(jLabelScreen.getText());
           } else if (jRadioButtonHex.isSelected()){
               op2 = hexToDecimal(jLabelScreen.getText());
           } else {
               op2 = Integer.parseInt(jLabelScreen.getText());
           }
           performOperation();
            
           if (jRadioButtonBinary.isSelected()) {
               jLabelScreen.setText(Integer.toBinaryString(result));
           } else if (jRadioButtonOctal.isSelected()) {
               jLabelScreen.setText(Integer.toOctalString(result));
           } else if (jRadioButtonHex.isSelected()){
               jLabelScreen.setText(Integer.toHexString(result).toUpperCase());
           } else {
               jLabelScreen.setText(String.valueOf(result));
           }
           
           jRadioButtonBinary.setEnabled(true);
           jRadioButtonDecimal.setEnabled(true);
           jRadioButtonOctal.setEnabled(true);
           jRadioButtonHex.setEnabled(true);

           op1 = result;
           button = 0;
        }
    }//GEN-LAST:event_jButtonEqualsActionPerformed
    
    private void jButtonAdditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdditionActionPerformed
        disableRadioButton();
        getValue();
        button = 1;
    }//GEN-LAST:event_jButtonAdditionActionPerformed
    
    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        Calculator calc = new Calculator();
        calc.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jRadioButtonHexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonHexActionPerformed
        if (jRadioButtonHex.isSelected()) {
            jButtonA.setEnabled(true);
            jButtonB.setEnabled(true);
            jButtonC.setEnabled(true);
            jButtonD.setEnabled(true);
            jButtonE.setEnabled(true);
            jButtonF.setEnabled(true);
            jButton2.setEnabled(true);
            jButton3.setEnabled(true);
            jButton4.setEnabled(true);
            jButton5.setEnabled(true);
            jButton6.setEnabled(true);
            jButton7.setEnabled(true);
            jButton8.setEnabled(true);
            jButton9.setEnabled(true);
            jButton8.setEnabled(true);
            jButton9.setEnabled(true);
        }
        
        if (!jLabelScreen.getText().isEmpty()){
            String n = jLabelScreen.getText();
        
            switch(radioButton) {
                case 1:
                    binaryToHex(n);
                    radioButton = 1;
                    break;
                case 2:
                    decToHex(Integer.parseInt(n));
                    radioButton = 2;
                    break;
                case 3:
                    octalToHex(n);
                    radioButton = 3;
                    break;
                case 4:
                    jLabelScreenAnswer.setText(n);
                    radioButton = 4;
                    break;
                default:
                    jLabelScreenAnswer.setText("Error.");
            }
        } else {
            radioButton = 4;
        }
    }//GEN-LAST:event_jRadioButtonHexActionPerformed

    private void jRadioButtonBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonBinaryActionPerformed
        if(jRadioButtonBinary.isSelected()) {
            jButtonA.setEnabled(false);
            jButtonB.setEnabled(false);
            jButtonC.setEnabled(false);
            jButtonD.setEnabled(false);
            jButtonE.setEnabled(false); 
            jButtonF.setEnabled(false);
            jButton2.setEnabled(false);
            jButton3.setEnabled(false);
            jButton4.setEnabled(false);
            jButton5.setEnabled(false);
            jButton6.setEnabled(false);
            jButton7.setEnabled(false);
            jButton8.setEnabled(false);
            jButton9.setEnabled(false);
        }
        if (!jLabelScreen.getText().isEmpty()){
            String n = jLabelScreen.getText();
        
            switch(radioButton) {
                case 1:
                    jLabelScreenAnswer.setText(n);
                    radioButton = 1;
                    break;
                case 2:
                    decToBinary(Integer.parseInt(n));
                    radioButton = 2;
                    break;
                case 3:
                    octalToBinary(String.valueOf(n));
                    radioButton = 3;
                    break;
                case 4:
                    hexToBinary(String.valueOf(n));
                    radioButton = 4;
                    break;
                default:
                    jLabelScreenAnswer.setText("Error.");
            }
        } else {
            radioButton = 1;
        }
    }//GEN-LAST:event_jRadioButtonBinaryActionPerformed

    private void jRadioButtonDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDecimalActionPerformed
        if (jRadioButtonDecimal.isSelected()) {
            jButtonA.setEnabled(false);
            jButtonB.setEnabled(false);
            jButtonC.setEnabled(false);
            jButtonD.setEnabled(false);
            jButtonE.setEnabled(false);
            jButtonF.setEnabled(false);
            jButton2.setEnabled(true);
            jButton3.setEnabled(true);
            jButton4.setEnabled(true);
            jButton5.setEnabled(true);
            jButton6.setEnabled(true);
            jButton7.setEnabled(true);
            jButton8.setEnabled(true);
            jButton9.setEnabled(true);
        }
        
        if (!jLabelScreen.getText().isEmpty()){
            String n = jLabelScreen.getText();
            
            switch(radioButton) {
                case 1:
                    jLabelScreenAnswer.setText(String.valueOf(binaryToDecimal(n)));
                    radioButton = 1;
                    break;
                case 2:
                    jLabelScreenAnswer.setText(n);
                    radioButton = 2;
                    break;
                case 3:
                    jLabelScreenAnswer.setText(String.valueOf(octalToDecimal(n)));
                    radioButton = 3;
                    break;
                case 4:
                    jLabelScreenAnswer.setText(String.valueOf(hexToDecimal(n)));
                    radioButton = 4;
                    break;
                default:
                    jLabelScreenAnswer.setText("Error.");
            }
        } else {
            radioButton = 2;
        }
    }//GEN-LAST:event_jRadioButtonDecimalActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String current1 = jLabelScreen.getText();
        jLabelScreen.setText(current1 + "1");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAActionPerformed
        String currentA = jLabelScreen.getText();
        jLabelScreen.setText(currentA + "A");
    }//GEN-LAST:event_jButtonAActionPerformed

    private void jButton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton0ActionPerformed
        String current0 = jLabelScreen.getText();
        jLabelScreen.setText(current0 + "0");
    }//GEN-LAST:event_jButton0ActionPerformed

    private void jButtonFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFActionPerformed
        String currentF = jLabelScreen.getText();
        jLabelScreen.setText(currentF + "F");
    }//GEN-LAST:event_jButtonFActionPerformed

    private void jButtonBackSpaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackSpaceActionPerformed
        String currentText = jLabelScreen.getText();
        if (!currentText.isEmpty()) {
            jLabelScreen.setText(currentText.substring(0, currentText.length() - 1));
        }
    }//GEN-LAST:event_jButtonBackSpaceActionPerformed

    private void jRadioButtonOctalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOctalActionPerformed
        if (jRadioButtonOctal.isSelected()) {
            jButtonA.setEnabled(false);
            jButtonB.setEnabled(false);
            jButtonC.setEnabled(false);
            jButtonD.setEnabled(false);
            jButtonE.setEnabled(false);
            jButtonF.setEnabled(false);
            jButton2.setEnabled(true);
            jButton3.setEnabled(true);
            jButton4.setEnabled(true);
            jButton5.setEnabled(true);
            jButton6.setEnabled(true);
            jButton7.setEnabled(true);
            jButton8.setEnabled(false);
            jButton9.setEnabled(false);
        }
        
        if (!jLabelScreen.getText().isEmpty()){
            String n = jLabelScreen.getText();
        
            switch(radioButton) {
                case 1:
                    binaryToOctal(n);
                    radioButton = 1;
                    break;
                case 2:
                    decToOctal(Integer.parseInt(n));
                    radioButton = 2;
                    break;
                case 3:
                    jLabelScreenAnswer.setText(n);
                    radioButton = 3;
                    break;
                case 4:
                    hexToOctal(n);
                    radioButton = 4;
                    break;
                default:
                    jLabelScreenAnswer.setText("Error.");
            }
        } else {
            radioButton = 3;
        }
    }//GEN-LAST:event_jRadioButtonOctalActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        jLabelScreen.setText("");
        jLabelScreenAnswer.setText("");
        
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String current2 = jLabelScreen.getText();
        jLabelScreen.setText(current2 + "2");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String current3 = jLabelScreen.getText();
        jLabelScreen.setText(current3 + "3");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String current4 = jLabelScreen.getText();
        jLabelScreen.setText(current4 + "4");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String current5 = jLabelScreen.getText();
        jLabelScreen.setText(current5 + "5");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String current6 = jLabelScreen.getText();
        jLabelScreen.setText(current6 + "6");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String current7 = jLabelScreen.getText();
        jLabelScreen.setText(current7 + "7");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String current8 = jLabelScreen.getText();
        jLabelScreen.setText(current8 + "8");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        String current9 = jLabelScreen.getText();
        jLabelScreen.setText(current9 + "9");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButtonBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBActionPerformed
        String currentB = jLabelScreen.getText();
        jLabelScreen.setText(currentB + "B");
    }//GEN-LAST:event_jButtonBActionPerformed

    private void jButtonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCActionPerformed
        String currentC = jLabelScreen.getText();
        jLabelScreen.setText(currentC + "C");
    }//GEN-LAST:event_jButtonCActionPerformed

    private void jButtonDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDActionPerformed
        String currentD = jLabelScreen.getText();
        jLabelScreen.setText(currentD + "D");
    }//GEN-LAST:event_jButtonDActionPerformed

    private void jButtonEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEActionPerformed
        String currentE = jLabelScreen.getText();
        jLabelScreen.setText(currentE + "E");
    }//GEN-LAST:event_jButtonEActionPerformed

    private void jButtonSubtractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubtractionActionPerformed
        disableRadioButton();
        getValue();
        button = 2;
    }//GEN-LAST:event_jButtonSubtractionActionPerformed

    private void jButtonMultiplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiplicationActionPerformed
        disableRadioButton();
        getValue();
        button = 3;
    }//GEN-LAST:event_jButtonMultiplicationActionPerformed

    private void jButtonDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDivisionActionPerformed
        disableRadioButton();
        getValue();
        button = 4;
    }//GEN-LAST:event_jButtonDivisionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pCalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton0;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonA;
    private javax.swing.JButton jButtonAddition;
    private javax.swing.JButton jButtonB;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonBackSpace;
    private javax.swing.JButton jButtonC;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonD;
    private javax.swing.JButton jButtonDivision;
    private javax.swing.JButton jButtonE;
    private javax.swing.JButton jButtonEquals;
    private javax.swing.JButton jButtonF;
    private javax.swing.JButton jButtonMultiplication;
    private javax.swing.JButton jButtonSubtraction;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextArea jLabelScreen;
    private javax.swing.JTextArea jLabelScreenAnswer;
    private javax.swing.JRadioButton jRadioButtonBinary;
    private javax.swing.JRadioButton jRadioButtonDecimal;
    private javax.swing.JRadioButton jRadioButtonHex;
    private javax.swing.JRadioButton jRadioButtonOctal;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}